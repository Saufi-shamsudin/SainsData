mport pandas as pd # yang ini library untuk Datasheet # takda ni python tak leh baca
import scipy  # yang ini library untuk math dan statistic punya function
from scipy import stats #Dalam library scipy ni function stat untuk statistic
import statsmodels.api as sm # ni function utk semua model stat 

############ 2 sample T Test ##################
help(pd)

# Load the data
cutlets = pd.read_csv ("C:\\Users\\user\\Desktop\\data Sc with R & Pyhton\\Cutlets.csv") #nak open file director kena letak "\\" ni dari awal kalau tak tak boleh baca
cutlets

cutlets.columns = "unitA", "unitB" #yang ini kena bagitau pasal kita nak buat statistic kat column tu, kalau xde tak boleh baca

# Normality Test
stats.shapiro(cutlets.unitA) # Shapiro Test
stats.shapiro(cutlets.unitB) #(dalam kurungan pertama tu nama dataset kita, kurungan kedua pulak variable atau coloumn yg kita target)
print(stats.shapiro(cutlets.unitA))
print(stats.shapiro(cutlets.unitB))
help(stats.shapiro)

# Variance test
scipy.stats.levene(cutlets.unitA, cutlets.unitB) #levene test nak tengok sama ada 2 population ni ada variace ke tak.. H null dia : population dia ada variance ..Ha vice versa
help(scipy.stats.levene)
# p-value = 0.287 > 0.05 so p high null fly => Equal variances

# 2 Sample T test
scipy.stats.ttest_ind(cutlets.unitA, cutlets.unitB)
help(scipy.stats.ttest_ind)


############# One - Way Anova ################
from statsmodels.formula.api import ols
LabTAT = pd.read_csv ("C:\\Users\\user\\Desktop\\data Sc with R & Pyhton\\LabTAT.csv")
LabTAT

LabTAT.columns="Lab1","Lab2","Lab3","Lab4"

# Normality Test
print(stats.shapiro(LabTAT.Lab1)) # Shapiro Test
print(stats.shapiro(LabTAT.Lab2))
print(stats.shapiro(LabTAT.Lab3))
print(stats.shapiro(LabTAT.Lab4))

# Variance test
scipy.stats.levene(LabTAT.Lab1, LabTAT.Lab2)
scipy.stats.levene(LabTAT.Lab2, LabTAT.Lab3)
scipy.stats.levene(LabTAT.Lab3, LabTAT.Lab4)
scipy.stats.levene(LabTAT.Lab1, LabTAT.Lab4)
scipy.stats.levene(LabTAT.Lab2, LabTAT.Lab4)
scipy.stats.levene(LabTAT.Lab1, LabTAT.Lab3)

# One - Way Anova
mod = ols('Lab1 ~ Lab2 + Lab3 + Lab4' ,data = LabTAT).fit() # one way anova kena ada satu variable yg kena connect satu persatu ngan variable yang lain

aov_table = sm.stats.anova_lm(mod, type=2)
help(sm.stats.anova_lm)

#buat utk lab2 plak
mod = ols('Lab2 ~ Lab1 + Lab3 + Lab4' ,data = LabTAT).fit() # one way anova kena ada satu variable yg kena connect satu persatu ngan variable yang lain

aov_table = sm.stats.anova_lm(mod, type=2)
aov_table

# buat utk lab3 
mod = ols('Lab3 ~ Lab1 + Lab2 + Lab4' ,data = LabTAT).fit()
aov_table = sm.stats.anova_lm(mod, type=2)
aov_table

#buat utk lab4 
mod = ols('Lab4 ~ Lab1 + Lab2 + Lab3' ,data = LabTAT).fit()
aov_table = sm.stats.anova_lm(mod, type=2)
aov_table



######### 2-proportion test ###########
import numpy as np

buyer_ratio =  pd.read_csv ("C:\\Users\\user\\Desktop\\data Sc with R & Pyhton\\Buyer Ratio.csv")
buyer_ratio

#chi test square utk semua region, tak payah 

#buat untuk east dan west

count1=pd.crosstab(buyer_ratio.East,buyer_ratio.West) 
Chisquares_results1=scipy.stats.chi2_contingency(count1,correction = False)
Chi_pValue1=Chisquares_results1[1]
Chi_square=[
        ['','Test Statistic','p-value'],
        ['Sample Data',Chisquares_results[0],Chisquares_results[1]]
        ]
print("p-value is: "+str(Chi_pValue1))

#South & North
count2=pd.crosstab(buyer_ratio.North,buyer_ratio.South) 
Chisquares_results2=scipy.stats.chi2_contingency(count2,correction = False)
Chi_pValue2=Chisquares_results2[1]
print("p-value is: "+str(Chi_pValue2))

#North & East

count3=pd.crosstab(buyer_ratio.North,buyer_ratio.East) 
Chisquares_results3=scipy.stats.chi2_contingency(count3,correction = False)
Chi_pValue3=Chisquares_results3[1]
print("p-value is: "+str(Chi_pValue3))

#North & West
count4=pd.crosstab(buyer_ratio.North,buyer_ratio.West) 
Chisquares_results4=scipy.stats.chi2_contingency(count4,correction = False)
Chi_pValue4=Chisquares_results4[1]
print("p-value is: "+str(Chi_pValue4))






################ Chi-Square Test ################

customer=pd.read_csv ("C:\\Users\\user\\Desktop\\data Sc with R & Pyhton\\Customer OrderForm.csv")
customer

tab1 = customer.Phillippines.value_counts()
tab1

tab2 = customer.Indonesia.value_counts()
tab2

tab3 = customer.Malta.value_counts()
tab3

tab4 = customer.India.value_counts()
tab4

tab = tab1 + tab2 + tab3 + tab4
tab

#Indonesia & Philippines

count1=pd.crosstab(customer.Phillippines,customer.Indonesia) 
Chisquares_results1=scipy.stats.chi2_contingency(count1,correction = False)
Chi_pValue1=Chisquares_results1[1]
Chi_square=[
        ['','Test Statistic','p-value'],
        ['Sample Data',Chisquares_results[0],Chisquares_results[1]]
        ]
print("p-value is: "+str(Chi_pValue1))

#Philippines & Malta

count2=pd.crosstab(customer.Phillippines,customer.Malta) 
Chisquares_results2=scipy.stats.chi2_contingency(count2,correction = False)
Chi_pValue2=Chisquares_results2[1]
print("p-value is: "+str(Chi_pValue2))


#Philippines & India

count3=pd.crosstab(customer.Phillippines,customer.India) 
Chisquares_results3=scipy.stats.chi2_contingency(count3,correction = False)
Chi_pValue3=Chisquares_results3[1]
print("p-value is: "+str(Chi_pValue3))

# India & Malta
count4=pd.crosstab(customer.Malta,customer.India) 
Chisquares_results4=scipy.stats.chi2_contingency(count4,correction = False)
Chi_pValue4=Chisquares_results4[1]
print("p-value is: "+str(Chi_pValue4))

# India & Indonesia
count5=pd.crosstab(customer.Indonesia,customer.India) 
Chisquares_results5=scipy.stats.chi2_contingency(count5,correction = False)
Chi_pValue5=Chisquares_results5[1]
print("p-value is: "+str(Chi_pValue5))

# Malta & Indonesia
count6=pd.crosstab(customer.Indonesia,customer.Malta) 
Chisquares_results6=scipy.stats.chi2_contingency(count6,correction = False)
Chi_pValue6=Chisquares_results6[1]
print("p-value is: "+str(Chi_pValue6))

################ 2propotion test ################
faltoons=pd.read_csv("C:\\Users\\user\\Desktop\\data Sc with R & Pyhton\\Faltoons.csv")
faltoons

from statsmodels.stats.proportion import proportions_ztest

tab1 = faltoons.Weekdays.value_counts()
tab1

tab2 = faltoons.Weekend.value_counts()
tab2

count = np.array([400,400])
nobs = np.array([520,280])

stats, pval1 = proportions_ztest(count,nobs, alternative='two-sided') 
print(pval1) # Pvalue- 0.000  
pval1

stats, pval2 = proportions_ztest(count,nobs, alternative='larger')
print(pval2)  # Pvalue 0.999  
pval2
